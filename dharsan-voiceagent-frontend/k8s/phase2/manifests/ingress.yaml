apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: voice-agent-phase2-ingress
  namespace: voice-agent-phase2
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/websocket-services: "orchestrator"
spec:
  tls:
  - hosts:
    - voice-agent.com
    - api.voice-agent.com
    - media.voice-agent.com
    - orchestrator.voice-agent.com
    secretName: voice-agent-tls
  rules:
  - host: voice-agent.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
  - host: api.voice-agent.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: media-server
            port:
              number: 8080
  - host: media.voice-agent.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: media-server
            port:
              number: 8080
  - host: orchestrator.voice-agent.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: orchestrator
            port:
              number: 8001

---
apiVersion: v1
kind: Service
metadata:
  name: voice-agent-loadbalancer
  namespace: voice-agent-phase2
  labels:
    app: voice-agent
    component: loadbalancer
spec:
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 80
  type: LoadBalancer 